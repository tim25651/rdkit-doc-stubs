"""
rdkit.ML.DecTree.TreeVis moduleÂ¶
functionality for drawing trees on sping canvases
"""
from _typeshed import Incomplete
from rdkit.sping.colors import Color
from rdkit.sping.pid import Font

class VisOpts(object):
    circColor: Color = ...
    circRad: int = ...
    highlightColor: Color = ...
    highlightWidth: int = ...
    horizOffset: int = ...
    labelFont: Font = ...
    lineColor: Color = ...
    lineWidth: int = ...
    maxCircRad: int = ...
    minCircRad: int = ...
    outlineColor: Color = ...
    maxCircRad: int = ...
    circColor: Color = ...
    terminalEmptyColor: Color = ...
    terminalOffColor: Color = ...
    terminalOnColor: Color = ...
    terminalOffColor: Color = ...
    outlineColor: Color = ...
    lineColor: Color = ...
    lineWidth: int = ...
    horizOffset: int = ...
    vertOffset: int = ...
    labelFont: Font = ...
    highlightColor: Color = ...
    highlightWidth: int = ...

visOpts: Incomplete

def CalcTreeNodeSizes(self, node):
    """
    Recursively calculate the total number of nodes under us.
    results are set in node.totNChildren for this node and
    everything underneath it."""
    ...

def SetNodeScales(self, node): ...
def DrawTreeNode(self, node, loc, canvas, nRes=2, scaleLeaves=False, showPurity=False):
    """
    Recursively displays the given tree node and all its children on the canvas"""
    ...

def CalcTreeWidth(self, tree): ...
def DrawTree(
    self, tree, canvas, nRes=2, scaleLeaves=False, allowShrink=True, showPurity=False
): ...
def DrawTreeNode(self, node, loc, canvas, nRes=2, scaleLeaves=False, showPurity=False):
    """
    Recursively displays the given tree node and all its children on the canvas"""
    ...

def ResetTree(self, tree): ...
def SetNodeScales(self, node): ...
