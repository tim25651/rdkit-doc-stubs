"""
rdkit.ML.KNN.KNNModel moduleÂ¶
Define the class _KNNModel_, used to represent a k-nearest neighbhors model
"""
from _typeshed import Incomplete
from rdkit.DataStructs.TopNContainer import TopNContainer as TopNContainer

class KNNModel(object):
    """
    This is a base class used by KNNClassificationModel
    and KNNRegressionModel to represent a k-nearest neighbor predictor. In general
    one of this child classes needs to be instantiated.

    _KNNModel_s can save the following pieces of internal state, accessible viastandard setter/getter functions - the child object store additional stuff:

    _Examples_: a list of examples which have been predicted (either classifiedor values predicted)

    _TrainingExamples_: List of training examples (since this is a KNN model these examplesalong with the value _k_ below define the model)

    _TestExamples_: the list of examples used to test the model
    _k_: the number of closest neighbors used for prediction"""

    def GetExamples(self): ...
    def __init__(self, k, attrs, dfunc, radius: Incomplete | None = ...) -> None: ...
    def GetName(self): ...
    def GetNeighbors(self, example):
        """
        Returns the k nearest neighbors of the example"""
        ...
    def GetTestExamples(self): ...
    def GetTrainingExamples(self): ...
    def SetExamples(self, examples): ...
    def SetName(self, name): ...
    def SetTestExamples(self, examples): ...
    def GetExamples(self): ...
    def SetExamples(self, examples): ...
    def GetTrainingExamples(self): ...
    def SetTrainingExamples(self, examples): ...
    def GetTestExamples(self): ...
    def SetTestExamples(self, examples): ...
    def GetNeighbors(self, example):
        """
        Returns the k nearest neighbors of the example"""
        ...
