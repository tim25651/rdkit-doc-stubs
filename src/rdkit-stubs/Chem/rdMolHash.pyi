"""
rdkit.Chem.rdMolHash moduleÂ¶
Module containing functions to generate hashes for molecules
"""
from typing import Any, ClassVar

import Boost.Python
from rdkit.Chem.rdchem import Mol

class HashFunction(Boost.Python.enum):
    AnonymousGraph: HashFunction = ...
    ArthorSubstructureOrder: HashFunction = ...
    AtomBondCounts: HashFunction = ...
    CanonicalSmiles: HashFunction = ...
    DegreeVector: HashFunction = ...
    ElementGraph: HashFunction = ...
    ExtendedMurcko: HashFunction = ...
    HetAtomProtomer: HashFunction = ...
    HetAtomTautomer: HashFunction = ...
    HetAtomTautomerv2: HashFunction = ...
    Mesomer: HashFunction = ...
    MolFormula: HashFunction = ...
    MurckoScaffold: HashFunction = ...
    NetCharge: HashFunction = ...
    RedoxPair: HashFunction = ...
    Regioisomer: HashFunction = ...
    SmallWorldIndexBR: HashFunction = ...
    SmallWorldIndexBRL: HashFunction = ...
    names: dict[str, HashFunction] = ...
    values: dict[int, HashFunction] = ...
    __slots__: ClassVar[tuple] = ...

def MolHash(
    self,
    mol: Mol,
    func: HashFunction,
    useCxSmiles: bool = False,
    cxFlagsToSkip: int = 0,
) -> str:
    """
    Generate a hash for a molecule. The func argument determines which hash is generated.

    C++ signature :std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > MolHash(RDKit::ROMol,RDKit::MolHash::HashFunction [,bool=False [,unsigned int=0]])
    """
    ...
